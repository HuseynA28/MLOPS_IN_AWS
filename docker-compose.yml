version: '3.8'
services:
  mysql:
    restart: always
    image: mysql
    container_name: mlflow_db
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./sql_scripts:/docker-entrypoint-initdb.d
    networks:
      custom-network:
        ipv4_address: 172.20.0.2

  mlflow:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow_server
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      S3_MLFLOW_BUCKET: ${S3_MLFLOW_BUCKET}
    command: >
      mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      --artifacts-destination s3://${S3_MLFLOW_BUCKET}/ --serve-artifacts --host 0.0.0.0
    depends_on:
      - mysql
    volumes:
      - mlflow-data:/mlflow
    networks:
      custom-network:
        ipv4_address: 172.20.0.3

  jupyter:
    image: jupyter/datascience-notebook
    container_name: jupyter
    ports:
      - "8888:8888"
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN: "password"
    depends_on:
      - mlflow
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --NotebookApp.token='password' --allow-root
    user: root
    restart: always
    volumes:
      - ./notebooks:/home/jovyan/work
      - jupyter-data:/jupyter
    networks:
      custom-network:
        ipv4_address: 172.20.0.4

networks:
  custom-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mlflow-data:
  dbdata:
  jupyter-data:
